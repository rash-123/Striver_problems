// https://takeuforward.org/plus/data-structures-and-algorithm/beginner-problems/basic-maths/check-if-the-number-if-armstrong

#include<bits/stdc++.h>
class Solution {
public:

//Time Complexity: O(log10(N)) – N is being divided by 10 until it becomes zero resulting in log10(N) iterations and in each iteration constant time operations are performed.
//Space Complexity: O(1) – Using a couple of variables i.e., constant space, regardless of the size of the input.
    int countDigit(int n){
        int count = log10(n) + 1;
        return count;
    }
    bool isArmstrong(int n) {
        int originalNo = n;
        int sum = 0;
        int count = countDigit(n);
        while(n > 0){
            int lastDigit = n % 10;
            sum += pow(lastDigit, count);
            n = n / 10;
        }
        if(originalNo == sum){
            return true;
        }
        return false;
    }
};