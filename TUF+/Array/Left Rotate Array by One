// https://takeuforward.org/plus/data-structures-and-algorithm/arrays/fundamentals/left-rotate-array-by-one

class Solution {
public:
//Time Complexity: O(N), where N is the number of elements in the array. Each element is visited once during the iteration.
//Space Complexity: O(1). The space used does not depend on the size of the input array and remains constant.
    void rotateArrayByOne(vector<int>& nums) {
        int n = nums.size();
        int temp = nums[0];
        for(int i = 0; i < n-1; i++){
            nums[i] = nums[i+1];
        }
        nums[n-1] = temp;
    }
};