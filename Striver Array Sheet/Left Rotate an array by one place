https://leetcode.com/problems/rotate-array/

class Solution {
public:
//brute 
//rotate the array from left side
//TC - O(k) + O(n-k) + O(k) = O(n+k)
//SC - O(k)
void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;
        vector<int> temp;
        for(int i = 0; i < k; i++){
            temp.push_back(nums[i]);
        }
        for(int i = k; i < n; i++){
            nums[i-k] = nums[i];
        }
        for(int i = n-k; i < n; i++){
            nums[i] = temp[i-(n-k)];
        }
    }

//Optimal 
//TC - O(2n)
//SC - O(1)
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;
        reverse(nums.begin(), nums.begin() + k);
        reverse(nums.begin() + k, nums.end());
        reverse(nums.begin(), nums.end());
    }

//rotate the array from the right side
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;
        reverse(nums.begin(), nums.end());
        reverse(nums.begin(), nums.begin() + k);
        reverse(nums.begin() + k, nums.end());
    }
};