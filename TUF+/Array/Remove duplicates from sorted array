https://takeuforward.org/plus/data-structures-and-algorithm/arrays/logic-building/remove-duplicates-from-sorted-array/editorial

class Solution {
public:
//Time Complexity: O(N * log N) + O(N), for using hashset, it will take O(N * log N) and also to traverse the array once O(N). Here N is the size of the array.
//Space Complexity: O(N) because in the worst case, all the elements of the array can be unique and it will take O(N) space. Here N represents the size of the array.
    int removeDuplicates(vector<int>& nums) {
        int n = nums.size();
        int j = 0;
        set<int> s;
        for(int i = 0; i < n; i++){
            s.insert(nums[i]);
        }
        for(int x: s){
            nums[j++] = x;
        }
        return j;
    }
};